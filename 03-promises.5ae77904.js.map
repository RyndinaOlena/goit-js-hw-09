{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,MAAOF,SAASC,cAAc,kBAC9BE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,mBACpCI,OAAQL,SAASC,cAAc,WAEjCH,EAAKC,OAAOO,iBAAiB,UAiC7B,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAaC,OAAOZ,EAAKI,MAAMS,OAC/BC,EAAOF,OAAOZ,EAAKK,UAAUQ,OAC7BE,EAASH,OAAOZ,EAAKM,YAAYO,QAnCvC,UAAuBF,WAAEA,EAAUG,KAAEA,EAAIC,OAAEA,IAEzC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACT,IAAIC,EAAW,EACf,MAAMC,EAAeC,aAAY,KAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCL,GAAY,EACZ,IAAIM,EAAQf,EAAaG,EAAOM,EAE5BG,EACEH,IAAaL,IACfY,cAAcN,GACdJ,EAAQ,C,SAAEG,E,MAAUM,MAItBC,cAAcN,GACdH,EAAO,C,SAAEE,E,MAAUM,I,GAIpBX,EAAO,GAETJ,EAAW,G,EAchBiB,CAAc,C,WAAEjB,E,KAAYG,E,OAAMC,IAAUc,MAAK,EAACT,SAAEA,EAAQM,MAAEA,MAC5DI,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAqBZ,QAAiBM,MAAU,IACvEO,OAAM,EAACb,SAAEA,EAAQM,MAAEA,MACpBI,EAAAhC,GAASiC,OAAOG,QAAQ,sBAAoBd,QAAeM,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  input: document.querySelector('[name=\"delay\"]'),\n  inputStep: document.querySelector('[name=\"step\"]'),\n  inputAmount: document.querySelector('[name=\"amount\"]'),\n  submit: document.querySelector('button')\n}\nrefs.formEl.addEventListener('submit', handelSubmit)\n\nfunction createPromise({ firstDelay, step, amount }) {\n\n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n      let position = 0;\n      const stopInterval = setInterval(() => {\n        const shouldResolve = Math.random() > 0.3;\n        position += 1;\n        let delay = firstDelay + step * position;\n\n        if (shouldResolve) {\n          if (position === amount) {\n            clearInterval(stopInterval)\n            resolve({ position, delay })\n            // Fulfill\n          }\n        } else {\n          clearInterval(stopInterval)\n          reject({ position, delay })\n\n          // Reject\n        }\n      }, amount)\n\n    }, firstDelay)\n\n  })\n\n}\n\nfunction handelSubmit(e) {\n  e.preventDefault()\n  let firstDelay = Number(refs.input.value);\n  let step = Number(refs.inputStep.value);\n  let amount = Number(refs.inputAmount.value);\n\n\n\n  createPromise({ firstDelay, step, amount }).then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  }).catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n  })\n}\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","input","inputStep","inputAmount","submit","addEventListener","e","preventDefault","firstDelay","Number","value","step","amount","Promise","resolve","reject","setTimeout","position","stopInterval","setInterval","shouldResolve","Math","random","delay","clearInterval","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.5ae77904.js.map"}