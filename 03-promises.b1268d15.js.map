{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA+BA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,MAAOF,SAASC,cAAc,kBAC9BE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,mBACpCI,OAAQL,SAASC,cAAc,WAEjCH,EAAKC,OAAOO,iBAAiB,UAiB7B,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAaC,OAAOZ,EAAKI,MAAMS,OAC/BC,EAAOF,OAAOZ,EAAKK,UAAUQ,OAC7BE,EAASH,OAAOZ,EAAKM,YAAYO,OACjCG,EAAW,EAEfC,YAAW,KACT,MAAMC,EAAeC,aAAY,KAC/BH,GAAY,EAxBlB,UAAuBL,WAAEA,EAAUG,KAAEA,EAAIM,SAAEA,IAEzC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,IAAIC,EAAQb,EAAaG,EAAOM,EACVK,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEF,E,MAAUI,IAEpBD,EAAO,C,SAAEH,E,MAAUI,GAAQ,G,CAkB3BG,CAAc,C,WAAEhB,E,KAAYG,EAAMM,SAAAJ,IAAYY,MAAK,EAACR,SAAEA,EAAQI,MAAEA,MAC9DK,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAqBX,QAAiBI,MAAU,IACvEQ,OAAM,EAACZ,SAAEA,EAAQI,MAAEA,MACpBK,EAAA/B,GAASgC,OAAOG,QAAQ,sBAAoBb,QAAeI,MAAU,IAEnER,IAAaD,GACfmB,cAAchB,EAAa,GAE5BJ,EAAK,GACPH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\n// setTimeout(() => {\n//   let position = 0;\n\n\n\n//   const stopInterval = setInterval(() => {\n//     const shouldResolve = Math.random() > 0.3;\n//     position += 1;\n//     let delay = firstDelay + step * position;\n\n//     if (shouldResolve) {\n//       if (position === amount) {\n//         clearInterval(stopInterval)\n//         resolve({ position, delay })\n//         // Fulfill\n//       }\n//     } else {\n//       clearInterval(stopInterval)\n//       reject({ position, delay })\n//       // Reject\n//     }\n//   }, step)\n\n\n\n\n// }, firstDelay)\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  input: document.querySelector('[name=\"delay\"]'),\n  inputStep: document.querySelector('[name=\"step\"]'),\n  inputAmount: document.querySelector('[name=\"amount\"]'),\n  submit: document.querySelector('button')\n}\nrefs.formEl.addEventListener('submit', handelSubmit)\n\nfunction createPromise({ firstDelay, step, position }) {\n\n  return new Promise((resolve, reject) => {\n    let delay = firstDelay + step * position;\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay })\n    } else {\n      reject({ position, delay })\n    }\n\n  })\n}\n\n\nfunction handelSubmit(e) {\n  e.preventDefault()\n  let firstDelay = Number(refs.input.value);\n  let step = Number(refs.inputStep.value);\n  let amount = Number(refs.inputAmount.value);\n  let position = 0;\n\n  setTimeout(() => {\n    const stopInterval = setInterval(() => {\n      position += 1;\n\n      createPromise({ firstDelay, step, position }).then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      }).catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      });\n      if (position === amount) {\n        clearInterval(stopInterval)\n      }\n    }, step)\n  }, firstDelay)\n\n}\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","input","inputStep","inputAmount","submit","addEventListener","e","preventDefault","firstDelay","Number","value","step","amount","position1","setTimeout","stopInterval","setInterval","position","Promise","resolve","reject","delay","Math","random","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","catch","failure","clearInterval"],"version":3,"file":"03-promises.b1268d15.js.map"}