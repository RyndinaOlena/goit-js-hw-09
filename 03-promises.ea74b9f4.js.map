{"mappings":"iiBA8EA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASC,cAAc,UAyCtC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAGtDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GACjDA,E,IAIP,SAASS,EAAUP,GACjBQ,EAAAlB,GAASmB,OAAOC,QAAQV,E,CAG1B,SAASW,EAAQV,GACfO,EAAAlB,GAASmB,OAAOG,QAAQX,E,CAzD1BT,EAAKqB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,IAAIlB,EAAW,EAGImB,EAAfF,EAAEG,cADJC,SAAYpB,EAAKkB,EAALlB,MAAOqB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGvBC,EAAaC,SAASxB,EAAMyB,OAIhC5B,EAAO6B,aAAa,WAAY,YAKhC,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAOG,MAAOE,IAMjC,GALA5B,GAAY,EAEZD,EAAc6B,EAAGJ,GAAYK,KAAKnB,GAAWoB,MAAMhB,GACnDU,GAAcC,SAASH,EAAKI,OAExB1B,IAAauB,EAAOG,MAItB,OAHAK,QAAQC,IAAI,OACZlC,EAAO6B,aAAa,WAAY,iBAChChC,EAAKsC,O","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n\n\n\n\n// const refs = {\n//   formEl: document.querySelector('.form'),\n//   input: document.querySelector('[name=\"delay\"]'),\n//   inputStep: document.querySelector('[name=\"step\"]'),\n//   inputAmount: document.querySelector('[name=\"amount\"]'),\n//   submit: document.querySelector('button')\n// }\n// refs.formEl.addEventListener('submit', handelSubmit)\n\n// function createPromise({ firstDelay, step, position }) {\n\n//   return new Promise((resolve, reject) => {\n//     // let delay = firstDelay + step * position;\n//     const shouldResolve = Math.random() > 0.3;\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay })\n//       } else {\n//         reject({ position, delay })\n//       }\n//     }, firstDelay)\n//   })\n// }\n\n\n// function handelSubmit(e) {\n//   e.preventDefault()\n//   let firstDelay = Number(refs.input.value);\n//   let step = Number(refs.inputStep.value);\n//   let amount = Number(refs.inputAmount.value);\n//   let position = 0;\n//   makeDisableDate()\n\n//   for (let i = 1; i <= amount; i += 1) {\n//     position += 1\n//     const stopInterval = setInterval(() => {\n\n\n\n//       createPromise({ firstDelay, step, position }).then(({ position, delay }) => {\n//         Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n//       }).catch(({ position, delay }) => {\n//         Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n//       });\n\n//       if (position === amount) {\n//         clearInterval(stopInterval)\n//         removeAttributeBtn()\n//         return\n\n//       }\n\n//     }, firstDelay)\n//   }\n\n\n\n\n\n\n//   refs.formEl.reset()\n\n\n// }\n// function removeAttributeBtn() {\n//   refs.submit.removeAttribute(\"disabled\", \"disabled\");\n// }\n\n// function makeDisableDate() {\n//   refs.submit.setAttribute(\"disabled\", \"disabled\");\n// };\n\n\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst submit = document.querySelector('button')\n\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  let position = 0;\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  let totalDelay = parseInt(delay.value);\n\n\n\n  submit.setAttribute(\"disabled\", \"disabled\")\n  // console.log(`delay: ${delay.value}`);\n  // console.log(`step: ${step.value}`);\n  // console.log(`amount: ${amount.value}`);\n\n  for (let i = 1; i <= amount.value; i++) {\n    position += 1\n\n    createPromise(i, totalDelay).then(onSuccess).catch(onError);\n    totalDelay += parseInt(step.value);\n\n    if (position === amount.value) {\n      console.log('qwe')\n      submit.setAttribute(\"disabled\", \"disabled\");\n      form.reset()\n      return\n    }\n\n\n\n  }\n\n\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n\nfunction onSuccess(resolve) {\n  Notiflix.Notify.success(resolve);\n}\n\nfunction onError(reject) {\n  Notiflix.Notify.failure(reject);\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$submit","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","$ce04d3a99e08e73b$var$onSuccess","$parcel$interopDefault","Notify","success","$ce04d3a99e08e73b$var$onError","failure","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","totalDelay","parseInt","value","setAttribute","i","then","catch","console","log","reset"],"version":3,"file":"03-promises.ea74b9f4.js.map"}