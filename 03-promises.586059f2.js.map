{"mappings":"qhBA8EA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASC,cAAc,UA2CtC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBH,QAAiBC,OAG9CG,EAAK,sBAAoBJ,QAAeC,MAAU,GACnDA,EAAM,G,CAIb,SAASQ,EAAUN,GACjBO,EAAAjB,GAASkB,OAAOC,QAAQT,E,CAG1B,SAASU,EAAQT,GACfM,EAAAjB,GAASkB,OAAOG,QAAQV,E,CA3D1BT,EAAKoB,iBAAiB,UAKtB,SAAsBC,GACpBA,EAAEC,iBAEF,MACEC,UAAUjB,MAAEA,EAAKkB,KAAEA,EAAIC,OAAEA,IACvBJ,EAAEK,cAEN,IAAIC,EAAaC,SAAStB,EAAMuB,OAChCC,QAAQC,IAAIJ,GAKZ,IAAIK,EAAcJ,SAASH,EAAOI,OAElC,IAAK,IAAII,EAAI,EAAGA,GAAKD,EAAaC,IAAK,CAMrC,GAJA9B,EAAO+B,aAAa,WAAY,YAEhCJ,QAAQC,IAjBK,GAkBbD,QAAQC,IAAIC,GAlBC,IAmBIA,EAGf,OAFAF,QAAQC,IAAI,YACZ5B,EAAOgC,gBAAgB,WAAY,YAGrC/B,EAAc6B,EAAGN,GAAYS,KAAKtB,GAAWuB,MAAMnB,GACnDS,GAAcC,SAASJ,EAAKK,M,CAI9B7B,EAAKsC,O","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n\n\n\n\n// const refs = {\n//   formEl: document.querySelector('.form'),\n//   input: document.querySelector('[name=\"delay\"]'),\n//   inputStep: document.querySelector('[name=\"step\"]'),\n//   inputAmount: document.querySelector('[name=\"amount\"]'),\n//   submit: document.querySelector('button')\n// }\n// refs.formEl.addEventListener('submit', handelSubmit)\n\n// function createPromise({ firstDelay, step, position }) {\n\n//   return new Promise((resolve, reject) => {\n//     // let delay = firstDelay + step * position;\n//     const shouldResolve = Math.random() > 0.3;\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay })\n//       } else {\n//         reject({ position, delay })\n//       }\n//     }, firstDelay)\n//   })\n// }\n\n\n// function handelSubmit(e) {\n//   e.preventDefault()\n//   let firstDelay = Number(refs.input.value);\n//   let step = Number(refs.inputStep.value);\n//   let amount = Number(refs.inputAmount.value);\n//   let position = 0;\n//   makeDisableDate()\n\n//   for (let i = 1; i <= amount; i += 1) {\n//     position += 1\n//     const stopInterval = setInterval(() => {\n\n\n\n//       createPromise({ firstDelay, step, position }).then(({ position, delay }) => {\n//         Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n//       }).catch(({ position, delay }) => {\n//         Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n//       });\n\n//       if (position === amount) {\n//         clearInterval(stopInterval)\n//         removeAttributeBtn()\n//         return\n\n//       }\n\n//     }, firstDelay)\n//   }\n\n\n\n\n\n\n//   refs.formEl.reset()\n\n\n// }\n// function removeAttributeBtn() {\n//   refs.submit.removeAttribute(\"disabled\", \"disabled\");\n// }\n\n// function makeDisableDate() {\n//   refs.submit.setAttribute(\"disabled\", \"disabled\");\n// };\n\n\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst submit = document.querySelector('button')\n\n\nform.addEventListener('submit', handleSubmit);\n\n\n\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  let position = 0;\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  let totalDelay = parseInt(delay.value);\n  console.log(totalDelay)\n\n\n\n\n  let parceAmount = parseInt(amount.value)\n\n  for (let i = 1; i <= parceAmount; i++) {\n\n    submit.setAttribute(\"disabled\", \"disabled\")\n\n    console.log(position)\n    console.log(parceAmount)\n    if (position === parceAmount) {\n      console.log('qwe')\n      submit.removeAttribute(\"disabled\", \"disabled\");\n      return\n    }\n    createPromise(i, totalDelay).then(onSuccess).catch(onError);\n    totalDelay += parseInt(step.value);\n    //submit.removeAttribute(\"disabled\", \"disabled\");\n  }\n\n  form.reset()\n\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n\nfunction onSuccess(resolve) {\n  Notiflix.Notify.success(resolve);\n}\n\nfunction onError(reject) {\n  Notiflix.Notify.failure(reject);\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$submit","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$onSuccess","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$onError","failure","addEventListener","e","preventDefault","elements","step","amount","currentTarget","totalDelay","parseInt","value","console","log","parceAmount","i","setAttribute","removeAttribute","then","catch","reset"],"version":3,"file":"03-promises.586059f2.js.map"}